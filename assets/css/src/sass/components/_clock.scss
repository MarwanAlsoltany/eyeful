#clock {
  display: block;
  background: rgba(255,255,255,0.15);
  padding: 2rem 1.5rem;
  border-radius: $border-radius;
  position: relative;
  user-select: none;
  .time {
    display: block;
    height: 100%;
    min-height: 4rem;
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-transform: uppercase;
    position: relative;
    span {
      position: absolute;
      transition: 300ms 700ms cubic-bezier(0.65, -0.45, 0.35, 1.45);
      &:first-child {
        color: rgba(255,255,255,1);
        letter-spacing: 2px;
        text-shadow: 0 0 3px rgba(0,0,0,0.25);
        bottom: 0;
        left: 0;
        transform-origin: left bottom;
        &::before {
          content: '24-Format:' attr(title);
          content: attr(title);
          display: inline-block;
          color: inherit;
          font-size: 1.25rem;
          font-weight: initial;
          text-transform: initial;
          visibility: hidden;
          opacity: 0;
          position: absolute;
          top: -1.25rem;
          left: 0;
          transition: inherit;
        }
      }
      &:last-child {
        font-size: 2.35rem;
        font-weight: 300;
        color: rgba(255,255,255,0.5);
        right: 0;
        bottom: 2px;
        transition-duration: 700ms;
        transition-delay: 1000ms;
        &::before {
          content: $alarm-placeholder;
          font: $font-awesome;
          display: inline-block;
          width: 1.25rem;
          color: inherit;
          font-size: 1.15rem;
          text-align: center;
          position: absolute;
          top: -1.15rem;
          right: calc(1.15rem / 2.25);
          // @include dir-swap(());
          transition: inherit;
          animation: shake-hefty 300ms ease 7;
        }
      }
    }
  }
  @at-root .alarm {
    display: flex;
    flex-flow: row wrap;
    min-width: 10rem;
    max-width: 12rem;
    background: rgba(255,255,255,0.75);
    border-radius: $border-radius;
    overflow: hidden;
    visibility: hidden;
    opacity: 0;
    direction: ltr;
    position: absolute;
    right: 0;
    bottom: 0;
    z-index: 1;
    transition: all 300ms 700ms cubic-bezier(0.65, -0.45, 0.35, 1.45);
    label,
    input {
      flex: 1 0 100%;
      background: transparent;
      color: rgba(0,0,0,0.75);
      font-size: 0.875rem;
      font-weight: 500;
      white-space: nowrap;
      text-align: center;
      padding: calc(0.75rem + (0.25rem / 6)) 0.75rem;
    }
    label {
      font-weight: 700;
      text-transform: uppercase;
    }
    input {
      border: 0;
      border-top: 1px solid rgba(0,0,0,0.25);
      transition: 300ms ease;
      &:hover,
      &:focus {
        background: rgba(0,0,0,0.15);
        color: rgba(0,0,0,1);
        outline: 0;
      }
      &[type="number"] {
        flex: 0 1 50%;
        max-width: 50%;
        &:not(:first-of-type) {
          border-left: 1px solid rgba(0,0,0,0.25)
        }
        &::-webkit-input-placeholder {
          font-style: italic;
        }
      }
      &[type="submit"] {
        color: green;
      }
      &[type="reset"] {
        color: orangered;
      }
      &[disabled] {
        opacity: 0.75;
        text-decoration: line-through orangered;
        &:hover {
          background: transparent;
        }
        &:not([type="number"]) {
          display: none;
        }
      }
      &:not([type="number"]) {
        cursor: pointer;
      }
    }
  }
  &:hover {
    time.time {
      span:first-child {
        transform: scale(0.625);
        &::before {
          visibility: visible;
          opacity: 0.5;
        }
      }
      span:last-child {
        opacity: 0;
        transition-delay: 100ms;
        &::before {
          right: 65%;
        }
      }
    }
    .alarm {
      visibility: visible;
      opacity: 1;
    }
  }
  &[data-active="alarm"] {
    .time {
      span {
        &:last-child {
          &::before {
            content: $alarm-alternative;
            color: rgba(255,255,255,1);
            text-shadow: 0 0 3px rgba(0,0,0,0.25);
            animation: none;
          }
        }
      }
    }
    &:not(:hover) {
      .time {
        span {
          &:last-child {
            &::before {
              // safe-delay = 1st duration & delay + reasonable 
              // duration relevant to this animation duration
              $safe-delay: 700ms + 1000ms + 500ms / 2;
              animation: flash 500ms ease $safe-delay 1;
            }
          }
        }
      }
    }
  }
}